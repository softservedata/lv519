<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="9" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="1515" started-at="2020-07-19T21:46:09Z" finished-at="2020-07-19T21:46:10Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="1515" started-at="2020-07-19T21:46:09Z" finished-at="2020-07-19T21:46:10Z">
      <class name="task332.FunctionTestNG">
        <test-method status="PASS" signature="setUpBeforeClass()[pri:0, instance:task332.FunctionTestNG@7dc7cbad]" name="setUpBeforeClass" is-config="true" duration-ms="18" started-at="2020-07-19T21:46:09Z" finished-at="2020-07-19T21:46:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method status="PASS" signature="checkWhenNumberIsInValid(int)[pri:0, instance:task332.FunctionTestNG@7dc7cbad]" name="checkWhenNumberIsInValid" duration-ms="9" started-at="2020-07-19T21:46:09Z" data-provider="inValidDataProvider" finished-at="2020-07-19T21:46:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-15]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Number must be > 0 and < 2147483647]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Number must be > 0 and < 2147483647
at task332.DataOperation.checkNumber(DataOperation.java:14)
at task332.FunctionTestNG.checkWhenNumberIsInValid(FunctionTestNG.java:38)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWhenNumberIsInValid -->
        <test-method status="PASS" signature="checkWhenNumberIsInValid(int)[pri:0, instance:task332.FunctionTestNG@7dc7cbad]" name="checkWhenNumberIsInValid" duration-ms="2" started-at="2020-07-19T21:46:09Z" data-provider="inValidDataProvider" finished-at="2020-07-19T21:46:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Number must be > 0 and < 2147483647]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Number must be > 0 and < 2147483647
at task332.DataOperation.checkNumber(DataOperation.java:14)
at task332.FunctionTestNG.checkWhenNumberIsInValid(FunctionTestNG.java:38)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWhenNumberIsInValid -->
        <test-method status="PASS" signature="checkWhenNumberIsInValid(int)[pri:0, instance:task332.FunctionTestNG@7dc7cbad]" name="checkWhenNumberIsInValid" duration-ms="3" started-at="2020-07-19T21:46:09Z" data-provider="inValidDataProvider" finished-at="2020-07-19T21:46:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2147483647]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Number must be > 0 and < 2147483647]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Number must be > 0 and < 2147483647
at task332.DataOperation.checkNumber(DataOperation.java:14)
at task332.FunctionTestNG.checkWhenNumberIsInValid(FunctionTestNG.java:38)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWhenNumberIsInValid -->
        <test-method status="PASS" signature="checkWhenNumberIsInValid(int)[pri:0, instance:task332.FunctionTestNG@7dc7cbad]" name="checkWhenNumberIsInValid" duration-ms="2" started-at="2020-07-19T21:46:09Z" data-provider="inValidDataProvider" finished-at="2020-07-19T21:46:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Number must be > 0 and < 2147483647]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Number must be > 0 and < 2147483647
at task332.DataOperation.checkNumber(DataOperation.java:14)
at task332.FunctionTestNG.checkWhenNumberIsInValid(FunctionTestNG.java:38)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWhenNumberIsInValid -->
        <test-method status="PASS" signature="checkWhenNumberIsInValid(int)[pri:0, instance:task332.FunctionTestNG@7dc7cbad]" name="checkWhenNumberIsInValid" duration-ms="5" started-at="2020-07-19T21:46:09Z" data-provider="inValidDataProvider" finished-at="2020-07-19T21:46:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-25]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Number must be > 0 and < 2147483647]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Number must be > 0 and < 2147483647
at task332.DataOperation.checkNumber(DataOperation.java:14)
at task332.FunctionTestNG.checkWhenNumberIsInValid(FunctionTestNG.java:38)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWhenNumberIsInValid -->
        <test-method status="PASS" signature="checkWhenNumberIsValidAndResult(int, java.lang.String, int, java.lang.String, int, java.lang.String, int, java.lang.String, int)[pri:0, instance:task332.FunctionTestNG@7dc7cbad]" name="checkWhenNumberIsValidAndResult" duration-ms="3" started-at="2020-07-19T21:46:09Z" data-provider="validDataProvider" finished-at="2020-07-19T21:46:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[c]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[d]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWhenNumberIsValidAndResult -->
        <test-method status="PASS" signature="checkWhenNumberIsValidAndResult(int, java.lang.String, int, java.lang.String, int, java.lang.String, int, java.lang.String, int)[pri:0, instance:task332.FunctionTestNG@7dc7cbad]" name="checkWhenNumberIsValidAndResult" duration-ms="2" started-at="2020-07-19T21:46:09Z" data-provider="validDataProvider" finished-at="2020-07-19T21:46:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[c]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[d]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWhenNumberIsValidAndResult -->
        <test-method status="PASS" signature="checkWhenNumberIsValidAndResult(int, java.lang.String, int, java.lang.String, int, java.lang.String, int, java.lang.String, int)[pri:0, instance:task332.FunctionTestNG@7dc7cbad]" name="checkWhenNumberIsValidAndResult" duration-ms="1419" started-at="2020-07-19T21:46:09Z" data-provider="validDataProvider" finished-at="2020-07-19T21:46:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[100000]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[26896]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[25600]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[c]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[25600]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[d]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[21904]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWhenNumberIsValidAndResult -->
        <test-method status="PASS" signature="checkWhenNumberIsValidAndResult(int, java.lang.String, int, java.lang.String, int, java.lang.String, int, java.lang.String, int)[pri:0, instance:task332.FunctionTestNG@7dc7cbad]" name="checkWhenNumberIsValidAndResult" duration-ms="1" started-at="2020-07-19T21:46:10Z" data-provider="validDataProvider" finished-at="2020-07-19T21:46:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[c]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[d]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkWhenNumberIsValidAndResult -->
      </class> <!-- task332.FunctionTestNG -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
